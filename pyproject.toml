[tool.poetry]
name = "zenoml"
version = "0.1.0"
description = "Behavioral Evaluation Framework for Machine Learning"
license = "MIT"
authors = ["√Ångel Alexander Cabrera <alex.cabrera@gmail.com>"]
readme = "README.md"  # Markdown files are supported
repository = "https://github.com/cmudig/zeno"
homepage = "https://dig.cmu.edu/zeno/"
keywords = ["ml", "testing"]
packages = [
    { include = "zeno" },
]
include = [
    "zeno/frontend/**/*"
]
exclude = ["zeno/tests/*"]

[tool.poetry.dependencies]
python = ">=3.8,<3.11" 
pandas = "^1.4.0"
pyarrow = "^9.0.0"
uvicorn = ">=0.17.5,<0.19.0"
fastapi = ">=0.75,<0.80"
websockets = "^10.2"
tqdm = "^4.64.0"
tomli = "^2.0.1"

[tool.poetry.dev-dependencies]
pandas-stubs = "^1.4.3"
pytest = "^7.1.1"
pytest-cov = "^3.0"
black = "^22.6.0"
flake8 = "^5.0.0"
mypy = "^0.971"
pyright = "^1.1.261"
usort = "^1.0.1"
zenoml-audio-transcription = {path = "views/audio-transcription", develop = true}
zenoml-image-classification = {path = "views/image-classification", develop = true}
zenoml-image-object-detection = {path = "views/image-object-detection", develop = true}
zenoml-image-segmentation = {path = "views/image-segmentation", develop = true}
zenoml-text-classification = {path = "views/text-classification", develop = true}
zenoml-timeseries = {path = "views/timeseries", develop = true}

[tool.poetry.scripts]
zeno = "zeno.runner:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["zeno"]
useLibraryCodeForTypes = true